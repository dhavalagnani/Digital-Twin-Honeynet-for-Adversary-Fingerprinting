# Digital Twin Honeynet - HAProxy Configuration
# This file is installed to /etc/haproxy/haproxy.cfg during native installation

global
    log /dev/log local0
    log /dev/log local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000

frontend http_front
    bind *:80
    bind *:443 ssl crt /etc/ssl/certs/honeynet.pem
    mode http
    
    # ACLs for routing decisions
    acl is_whitelisted src -f /etc/haproxy/whitelist.txt
    acl is_blacklisted src -f /etc/haproxy/blacklist.txt
    acl is_attack req.hdr(User-Agent) -m sub sqlmap
    acl is_attack req.hdr(User-Agent) -m sub nikto
    acl is_attack req.hdr(User-Agent) -m sub nmap
    acl is_attack req.hdr(User-Agent) -m sub dirb
    acl is_attack req.hdr(User-Agent) -m sub gobuster
    acl is_attack req.hdr(User-Agent) -m sub wfuzz
    acl is_attack req.hdr(User-Agent) -m sub burp
    acl is_attack req.hdr(User-Agent) -m sub zap
    acl is_attack req.hdr(User-Agent) -m sub acunetix
    acl is_attack req.hdr(User-Agent) -m sub nessus
    acl is_attack req.hdr(User-Agent) -m sub openvas
    acl is_attack req.hdr(User-Agent) -m sub metasploit
    acl is_attack req.hdr(User-Agent) -m sub hydra
    acl is_attack req.hdr(User-Agent) -m sub medusa
    
    # Route to production if whitelisted
    use_backend production if is_whitelisted
    
    # Route to honeypot if blacklisted or attack detected
    use_backend honeypot if is_blacklisted is_attack
    
    # Default to production
    default_backend production

backend production
    mode http
    server prod1 127.0.0.1:8081 check

backend honeypot
    mode http
    server honeypot1 127.0.0.1:8080 check

# SSH traffic routing
frontend ssh_front
    bind *:22
    mode tcp
    
    # ACLs for SSH routing
    acl is_whitelisted_ssh src -f /etc/haproxy/whitelist.txt
    acl is_blacklisted_ssh src -f /etc/haproxy/blacklist.txt
    
    # Route to production SSH if whitelisted
    use_backend ssh_production if is_whitelisted_ssh
    
    # Route to honeypot SSH if blacklisted
    use_backend ssh_honeypot if is_blacklisted_ssh
    
    # Default to honeypot SSH
    default_backend ssh_honeypot

backend ssh_production
    mode tcp
    server ssh_prod1 127.0.0.1:22 check

backend ssh_honeypot
    mode tcp
    server ssh_honeypot1 127.0.0.1:2222 check

# RDP traffic routing
frontend rdp_front
    bind *:3389
    mode tcp
    
    # ACLs for RDP routing
    acl is_whitelisted_rdp src -f /etc/haproxy/whitelist.txt
    acl is_blacklisted_rdp src -f /etc/haproxy/blacklist.txt
    
    # Route to production RDP if whitelisted
    use_backend rdp_production if is_whitelisted_rdp
    
    # Route to honeypot RDP if blacklisted
    use_backend rdp_honeypot if is_blacklisted_rdp
    
    # Default to honeypot RDP
    default_backend rdp_honeypot

backend rdp_production
    mode tcp
    server rdp_prod1 127.0.0.1:3389 check

backend rdp_honeypot
    mode tcp
    server rdp_honeypot1 127.0.0.1:3389 check

# SMB traffic routing
frontend smb_front
    bind *:445
    mode tcp
    
    # ACLs for SMB routing
    acl is_whitelisted_smb src -f /etc/haproxy/whitelist.txt
    acl is_blacklisted_smb src -f /etc/haproxy/blacklist.txt
    
    # Route to production SMB if whitelisted
    use_backend smb_production if is_whitelisted_smb
    
    # Route to honeypot SMB if blacklisted
    use_backend smb_honeypot if is_blacklisted_smb
    
    # Default to honeypot SMB
    default_backend smb_honeypot

backend smb_production
    mode tcp
    server smb_prod1 127.0.0.1:445 check

backend smb_honeypot
    mode tcp
    server smb_honeypot1 127.0.0.1:445 check

# Stats page (for monitoring)
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 10s
    stats auth admin:honeynet_password
